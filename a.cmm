int neg(int neg_i) {
    return -(neg_i);
}
int abs(int abs_i) {
    if(abs_i > 0) {
        return abs_i;
    }
    return neg(abs_i);
}
int f0(int a01, int a02, int a06[2]) {
    int a03 = 11;
    int a04 = 14;
    int a05[2];
    int i0[4];
    a05[0] = 17173;
    a05[1] = 4399;
    write(a03*a04);
    a06[0] = a05[0]+a05[0];
    if((a04+a03)) {
        a05[0] = 4-a06[1];
        a06[1] = a03*7;
    } else {
        a01 = a06[0]-a01-a03-a06[1];
        }
    a03 = 14+a06[0]+neg(14*a03)*a01;
    a01 = a03-a06[1];
    i0[0] = 0;
    while(i0[0] < 1) {
        i0[0] = i0[0] + 1;
        a05[0] = a05[1]-(a06[1]*a06[0]);
        a06[1] = neg(a06[0]*a05[0]);
    }
    a05[0] = a04*(neg(a02*a06[0]+6+0));
    a05[1] = a03+a03*8;
    return a04-11;
}
int f1(int a11, int a12, int a16[2]) {
    int a13 = 14;
    int a14 = 5;
    int a15[2];
    int i1[4];
    a15[0] = 17173;
    a15[1] = 4399;
    write(13*a16[1]+2);
    a16[0] = 6+a14;
    a15[1] = abs(8-a15[0]);
    a15[0] = 11*a16[0];
    i1[0] = 0;
    while(i1[0] < 1) {
        i1[0] = i1[0] + 1;
        a14 = a16[1]-11;
        i1[1] = 0;
        while(i1[1] < 3) {
            i1[1] = i1[1] + 1;
            a15[1] = neg(7*a15[0])+a12;
            a16[0] = 2+2;
            a16[0] = a13+a12;
            i1[2] = 0;
            while(i1[2] < 1) {
                i1[2] = i1[2] + 1;
                a15[1] = a16[1]*a11;
                a14 = a11*9;
            }
        }
    }
    a13 = read()*a13;
    return 15+a16[1];
}
int f2(int a21, int a22, int a26[2]) {
    int a23 = 3;
    int a24 = 15;
    int a25[2];
    int i2[4];
    a25[0] = 17173;
    a25[1] = 4399;
    a24 = a25[1]*0-6;
    if((f1(a26[1]+15, neg(15-a26[0]), a26)-a24) < (a26[0]*a22)) {
        a25[1] = a25[0]+1;
        a21 = a26[1]*a26[1];
        a24 = f1(a24*0, a22-a26[1], a25)*a25[1];
    }
    a22 = a24+15;
    a24 = a25[1]*a23;
    a26[1] = abs(a23*a24);
    return a26[0]+a21;
}
int f3(int a31, int a32, int a36[2]) {
    int a33 = 15;
    int a34 = 10;
    int a35[2];
    int i3[4];
    a35[0] = 17173;
    a35[1] = 4399;
    a36[1] = 8*a36[1];
    a35[0] = abs(a31-a31-a31-a33);
    a35[0] = neg(read()+a35[1]);
    a36[1] = a36[1]*a36[0];
    a34 = a31-a31;
    return a33*a31;
}
int f4(int a41, int a42, int a46[2]) {
    int a43 = 7;
    int a44 = 8;
    int a45[2];
    int i4[4];
    a45[0] = 17173;
    a45[1] = 4399;
    a43 = a45[1]+a45[0];
    a41 = a44-a46[0];
    a41 = a43*a42;
    write(a43*a45[1]);
    if((a46[1]*a46[1])) {
        a46[0] = a45[0]+11-a46[0]*a42-a42-((a41+9)+a46[0]-0);
        a45[0] = a41+a46[1];
        i4[0] = 0;
        while(i4[0] < 1) {
            i4[0] = i4[0] + 1;
            a44 = 14+8;
            a46[1] = neg(a46[0]-a43);
        }
        a43 = a44*a45[1]-a43;
    } else {
        i4[0] = 0;
        while(i4[0] < 2) {
            i4[0] = i4[0] + 1;
            write(a46[1]*a43-a42+a46[1]);
            a42 = a41+a42;
            a41 = a45[1]*3;
            a45[1] = read()*neg(2+7);
        }
        }
    return neg(a46[1]-a45[1])*a43+a43;
}
int f5(int a51, int a52, int a56[2]) {
    int a53 = 5;
    int a54 = 1;
    int a55[2];
    int i5[4];
    a55[0] = 17173;
    a55[1] = 4399;
    a52 = a55[1]*11;
    if((a56[0]+a55[1])) {
        a53 = 8+a55[1];
        a56[0] = a54+read()+a56[1];
    }
    return 11-a55[1];
    a55[0] = a55[0]*a56[1];
    a51 = a54+a56[1];
    a52 = a55[0]-read();
    a55[0] = abs(read()-a55[0]);
    return a52+a54;
}
int main() {
    int a61 = 1;
    int a62 = 13;
    int a63 = 3;
    int a64 = 4;
    int a65[2];
    int a66[2];
    int i6[4];
    a65[0] = 10151;
    a65[1] = 98808;
    a66[0] = 114;
    a66[1] = 514;
    a66[1] = a66[0]*a66[0];
    a62 = abs(a62+a66[1]);
    a65[1] = a61-15;
    i6[0] = 0;
    while(i6[0] < 4) {
        i6[0] = i6[0] + 1;
        a66[1] = 0-a66[1];
        a63 = a61*a65[0];
    }
    a61 = (a61*a66[1])+4;
    write(a63+a63);
    i6[0] = 0;
    while(i6[0] < 3) {
        i6[0] = i6[0] + 1;
        i6[1] = 0;
        while(i6[1] < 2) {
            i6[1] = i6[1] + 1;
            a64 = a64+a61;
            a61 = neg(a62-a65[1]);
        }
        a61 = a61*7;
    }
    return a65[1]-a66[0];
}
